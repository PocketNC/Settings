O<solo-tool-change> SUB

o400 if [ #<T> LT 1 OR #<T> GT 14 ]
  M66  E0 L0
  (abort,Tool number must be between 1 and 14.)
o400 endif

o600 if [ EXISTS[#<_hal[no-hardware.out]>] ]
M6 T[#<T>]
o<solo-tool-change> RETURN
o600 endif

o<init-tool-changer-vars> call

#<_oldTool> = #5400

#<_newTool> = #<T>

M66 P#<_toolClampedInput> L0
o200 if [ #<_oldTool> EQ #<_newTool> AND #5399 EQ 1]
  O<solo-tool-change> return
o200 endif

o500 if [ [ #5400 LT 1 OR #5400 GT 14 ] AND #5399 EQ 1 ]
  M66  E0 L0
  (abort,Can't put away tool #5400. Manually remove tool and try again.)
o500 endif

; See SOFT-967 for why this is necessary
#<backupFeed> = #<_feed>
#<backupMotionMode> = #<_motion_mode>
M70                                            ( save current modal state )

G20
M429

G61

G90
G94
G40

G53 G1 Z#<_safeZ> F#<_RapidFeed>
G53 G1 B0 F#<_RapidFeedRotary>
M270

M66 P#<_toolClampedInput> L0
o300 if [ #5399 EQ 1 ]
  ; if we have a tool loaded, put it back in its slot
  o<place-tool> call [ #<_oldTool> ]
o300 else  
  ; else unclamp tool for only picking up
  M260
o300 endif

o<pick-up-tool> call [ #<_newTool> ]

; write last tool to disk so at boot up we know what tool is loaded
M199 P[#<T>]

M6 T[#<T>]

M271

M72                                          ( restore modal state )
o100 if [ [ #<backupFeed> NE 0 ] AND [ #<backupMotionMode> EQ 1 ] ]
  G1 F#<backupFeed>
o100 elseif [ #<backupMotionMode> EQ 0 ]
  G0
o100 endif

O<solo-tool-change> ENDSUB

o<local-sync> sub
;  G4 P.2
  M66  E0 L0
o<local-sync> endsub
M2
