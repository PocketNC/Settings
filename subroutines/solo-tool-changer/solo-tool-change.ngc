O<solo-tool-change> SUB

; Uncomment these two lines to not perform a tool change when using M6
; but still indicate that the tool changed
;M6 T[#<T>]
;o<solo-tool-change> RETURN

o<init-tool-changer-vars> call

#<_oldTool> = #5400

#<_newTool> = #<T>

M66 P#<_toolClampedInput> L0
o200 if [ #<_oldTool> EQ #<_newTool> AND #5399 EQ 1]
  O<solo-tool-change> return
o200 endif

M70                                            ( save current modal state )

G61

G90
G94
G40

G53 G1 Z#<_safeZ> F#<_RapidFeed>
G53 G1 B0 F#<_RapidFeedRotary>
M270

M66 P#<_toolClampedInput> L0
o300 if [ #5399 EQ 1 ]
  ; if we have a tool loaded, put it back in its slot
  o<place-tool> call [ #<_oldTool> ]
o300 else  
  ; else unclamp tool for only picking up
  M260
o300 endif

o<pick-up-tool> call [ #<_newTool> ]

; write last tool to disk so at boot up we know what tool is loaded
M199 P[#<T>]

M6 T[#<T>]

M271

M72                                          ( restore modal state )

O<solo-tool-change> ENDSUB

o<local-sync> sub
;  G4 P.2
  M66  E0 L0
o<local-sync> endsub
M2
