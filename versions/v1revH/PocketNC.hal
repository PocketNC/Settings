# #######################################
#
# HAL file for BeagleBone PocketNC cape with 5 steppers
# 
# Derived from example hm2-stepper config
# ########################################

# Launch the setup script to make sure hardware setup looks good
loadusr -w [POCKETNC](LOAD_DEVICE_TREE_OVERLAY_SCRIPT)
loadusr -w [POCKETNC](CONFIGURE_PINS_SCRIPT)

# ###################################
# Core EMC/HAL Loads
# ###################################

# kinematics
loadrt [POCKETNC]KINEMATICS
loadrt tp

# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=[POCKETNC]KINEMATICS


# load low-level drivers
loadrt hal_bb_gpio output_pins=211,212,224 input_pins=109,114,118,119,216,222
loadrt [PRUCONF](DRIVER) [PRUCONF](CONFIG)
loadrt and2 names=mPwr.and,programStartFromIdle.and,programStartFromPaused.and,runningIntoPause.and
loadrt or2 names=programStartFromPaused.or
loadrt timedelay names=mPwr.timedelay
loadrt oneshot names=programStart.oneshot,programPause.oneshot
loadrt sum2 names=spindleMath
loadrt scale names=spindleScale
loadrt limit1 names=spindleLimit


# ################################################
# THREADS
# ################################################
addf hpg.capture-position	servo-thread
addf bb_gpio.read						servo-thread
addf motion-command-handler				servo-thread
addf motion-controller					servo-thread
addf hpg.update			servo-thread
addf bb_gpio.write						servo-thread


######################
# Testing
######################
addf mPwr.timedelay		servo-thread
addf mPwr.and			servo-thread
addf programStart.oneshot	servo-thread
addf programStartFromPaused.or		servo-thread
addf programStartFromIdle.and		servo-thread
addf programStartFromPaused.and		servo-thread
addf programPause.oneshot	servo-thread
addf spindleScale	servo-thread
addf spindleLimit	servo-thread
addf spindleMath	servo-thread
addf runningIntoPause.and	servo-thread

# ######################################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################


# ################
# X [0] Axis
# ################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE
net emcmot.00.enable <= axis.0.amp-enable-out 
net emcmot.00.enable => hpg.stepgen.00.enable

# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd
net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD
setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE
setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE
setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

#setp hpg.stepgen.00.step_type       0
setp hpg.stepgen.00.steppin         76 # = 0x4C - should be 812
setp hpg.stepgen.00.dirpin          77 # = 0x4D - should be 811


# ################
# Y [1] Axis
# ################

# axis enable chain
newsig emcmot.01.enable bit
sets emcmot.01.enable FALSE
net emcmot.01.enable <= axis.1.amp-enable-out 
net emcmot.01.enable => hpg.stepgen.01.enable

# position command and feedback
net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd
net motor.01.pos-fb <= hpg.stepgen.01.position-fb
net motor.01.pos-fb => axis.1.motor-pos-fb

# timing parameters
setp hpg.stepgen.01.dirsetup        [AXIS_1]DIRSETUP
setp hpg.stepgen.01.dirhold         [AXIS_1]DIRHOLD
setp hpg.stepgen.01.steplen         [AXIS_1]STEPLEN
setp hpg.stepgen.01.stepspace       [AXIS_1]STEPSPACE
setp hpg.stepgen.01.position-scale  [AXIS_1]SCALE
setp hpg.stepgen.01.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

#setp hpg.stepgen.01.step_type       0
setp hpg.stepgen.01.steppin         78 # = 0x4E - should be 816 - https://github.com/machinekit/machinekit/blob/master/src/hal/drivers/hal_pru_generic/beaglebone_pinmap.h
setp hpg.stepgen.01.dirpin          79 # = 0x4F - should be 815


# ################
# Z [2] Axis
# ################

# axis enable chain
newsig emcmot.02.enable bit
sets emcmot.02.enable FALSE
net emcmot.02.enable <= axis.2.amp-enable-out 
net emcmot.02.enable => hpg.stepgen.02.enable

# position command and feedback
net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
net emcmot.02.pos-cmd => hpg.stepgen.02.position-cmd
net motor.02.pos-fb <= hpg.stepgen.02.position-fb
net motor.02.pos-fb => axis.2.motor-pos-fb

# timing parameters
setp hpg.stepgen.02.dirsetup        [AXIS_2]DIRSETUP
setp hpg.stepgen.02.dirhold         [AXIS_2]DIRHOLD
setp hpg.stepgen.02.steplen         [AXIS_2]STEPLEN
setp hpg.stepgen.02.stepspace       [AXIS_2]STEPSPACE
setp hpg.stepgen.02.position-scale  [AXIS_2]SCALE
setp hpg.stepgen.02.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp hpg.stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

#setp hpg.stepgen.02.step_type       0
setp hpg.stepgen.02.steppin         80 # = 0x50 - should be 915
setp hpg.stepgen.02.dirpin          81 # = 0x51 - should be 923


# ################
# A [3] Axis
# ################

# axis enable chain
newsig emcmot.03.enable bit
sets emcmot.03.enable FALSE
net emcmot.03.enable <= axis.3.amp-enable-out 
net emcmot.03.enable => hpg.stepgen.03.enable

# position command and feedback
net emcmot.03.pos-cmd <= axis.3.motor-pos-cmd
net emcmot.03.pos-cmd => hpg.stepgen.03.position-cmd
net motor.03.pos-fb <= hpg.stepgen.03.position-fb
net motor.03.pos-fb => axis.3.motor-pos-fb

# timing parameters
setp hpg.stepgen.03.dirsetup        [AXIS_3]DIRSETUP
setp hpg.stepgen.03.dirhold         [AXIS_3]DIRHOLD
setp hpg.stepgen.03.steplen         [AXIS_3]STEPLEN
setp hpg.stepgen.03.stepspace       [AXIS_3]STEPSPACE
setp hpg.stepgen.03.position-scale  [AXIS_3]SCALE
setp hpg.stepgen.03.maxvel          [AXIS_3]STEPGEN_MAX_VEL
setp hpg.stepgen.03.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

setp hpg.stepgen.03.steppin         147 # = 0x93 - should be 927
setp hpg.stepgen.03.dirpin          145 # = 0x91 - should be 928




# ################
# B [4] Axis
# ################

# axis enable chain
newsig emcmot.04.enable bit
sets emcmot.04.enable FALSE
net emcmot.04.enable <= axis.4.amp-enable-out 
net emcmot.04.enable => hpg.stepgen.04.enable

# position command and feedback
net emcmot.04.pos-cmd <= axis.4.motor-pos-cmd
net emcmot.04.pos-cmd => hpg.stepgen.04.position-cmd
net motor.04.pos-fb <= hpg.stepgen.04.position-fb
net motor.04.pos-fb => axis.4.motor-pos-fb

# timing parameters
setp hpg.stepgen.04.dirsetup        [AXIS_4]DIRSETUP
setp hpg.stepgen.04.dirhold         [AXIS_4]DIRHOLD
setp hpg.stepgen.04.steplen         [AXIS_4]STEPLEN
setp hpg.stepgen.04.stepspace       [AXIS_4]STEPSPACE
setp hpg.stepgen.04.position-scale  [AXIS_4]SCALE
setp hpg.stepgen.04.maxvel          [AXIS_4]STEPGEN_MAX_VEL
setp hpg.stepgen.04.maxaccel        [AXIS_4]STEPGEN_MAX_ACC

setp hpg.stepgen.04.steppin         143 # = 0x8F - should be 929
setp hpg.stepgen.04.dirpin          144 # = 0x90 - should be 930

# ##################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ##################################################

# create signals for tool loading loopback
net tool-prep-loop		<= iocontrol.0.tool-prepare
net tool-prep-loop		=> iocontrol.0.tool-prepared
net tool-change-loop	<= iocontrol.0.tool-change
net tool-change-loop	=> iocontrol.0.tool-changed


### Home and Limit switches ###
# X axis
net XmaxAndHome	<= bb_gpio.p8.in-09
net XmaxAndHome	=> axis.0.home-sw-in
setp bb_gpio.p8.in-09.invert 1

# Y axis
net YmaxAndHome	<= bb_gpio.p8.in-14
net YmaxAndHome	=> axis.1.home-sw-in
setp bb_gpio.p8.in-14.invert 1

# Z axis
net ZmaxAndHome <= bb_gpio.p8.in-18
net ZmaxAndHome => axis.2.home-sw-in
setp bb_gpio.p8.in-18.invert 1


# A Axis Limit
net AmaxAndHome <= bb_gpio.p9.in-16
net AmaxAndHome => axis.3.home-sw-in
setp bb_gpio.p9.in-16.invert 1


# B axis
net BhomeAndIndex <= bb_gpio.p8.in-19
net BhomeAndIndex => axis.4.home-sw-in
setp bb_gpio.p8.in-19.invert 1

### Control Panel Buttons ###
# eStop
net estop-loop			<= iocontrol.0.user-enable-out
net estop-loop			=> iocontrol.0.emc-enable-in

# Machine power
setp halui.machine.on 1
setp halui.estop.reset 1
net driversEnable halui.machine.is-on => bb_gpio.p9.out-12

# Program start/run
setp bb_gpio.p9.in-22.invert 1
setp programStart.oneshot.width 0.1
net progStartButton		<= bb_gpio.p9.in-22
net progStartButton		=> programStart.oneshot.in
net progStart			<= programStart.oneshot.out
net progStart			=> programStartFromIdle.and.in0
net progStart			=> programStartFromPaused.and.in0
net progStart			=> runningIntoPause.and.in0
net progStartIdle		<= halui.program.is-idle
net progStartIdle		=> programStartFromIdle.and.in1
net progStartIdle		=> mPwr.and.in1
net progStartFromIdle	<= programStartFromIdle.and.out
net progStartFromIdle	=> halui.mode.auto
net progStartFromIdle	=> halui.program.run
net progStartPaused		<= halui.program.is-paused
net progStartPaused		=> programStartFromPaused.and.in1
net progStartPaused		=> programStartFromPaused.or.in1
net progStartFromPaused	<= programStartFromPaused.and.out
net progStartFromPaused	=> halui.program.resume
net progStarted			<= halui.program.is-running
net progStarted			=> runningIntoPause.and.in1

net progPauseLogic <= runningIntoPause.and.out
net progPauseLogic => halui.program.pause

### Spindle ###
setp spindleScale.gain -0.000052
setp spindleScale.offset .63
setp spindleLimit.min 0
setp spindleLimit.max 100
setp spindleMath.in0 -2048
net spindleEnable				<= motion.spindle-on
net spindleEnable				=> bb_gpio.p9.out-24
net spindleDirection			<= motion.spindle-forward
net spindleDirection			=> bb_gpio.p9.out-11
net displaySpindleReverseButton	<= motion.spindle-reverse
net spindleSpeedDummy motion.spindle-speed-out
net spindleSpeed <= motion.spindle-speed-out-abs
net spindleSpeed => spindleMath.in1
net spindleNewSpeed <= spindleMath.out
net spindleNewSpeed => spindleScale.in
net spindlePwm <= spindleScale.out
net spindlePwm => spindleLimit.in
net spindleScaleLimiter <= spindleLimit.out
net spindleScaleLimiter => hpg.pwmgen.00.out.00.value

setp hpg.pwmgen.00.pwm_period       1000000
setp hpg.pwmgen.00.out.00.pin       0x37
setp hpg.pwmgen.00.out.00.enable    1


